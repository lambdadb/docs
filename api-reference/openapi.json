{
  "openapi": "3.1.1",
  "info": {
    "title": "LambdaDB API",
    "summary": "LambdaDB Open API Spec",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "projects"
    },
    {
      "name": "projects.indexes"
    },
    {
      "name": "projects.indexes.docs"
    }
  ],
  "servers": [
    {
      "url": "https://{baseUrl}",
      "description": "LambdaDB API endpoints"
    }
  ],
  "x-speakeasy-retries": {
    "strategy": "backoff",
    "backoff": {
      "initialInterval": 500,
      "maxInterval": 60000,
      "maxElapsedTime": 3600000,
      "exponent": 1.5
    },
    "statusCodes": ["429","5XX"],
    "retryConnectionErrors": true
  },
  "components": {
    "parameters": {
      "ProjectName": {
        "in": "path",
        "name": "projectName",
        "description": "Project name.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "IndexName": {
        "in": "path",
        "name": "indexName",
        "description": "Index name.",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "AdminApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "Admin API Key."
      },
      "ProjectApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "Project API Key."
      }
    },
    "schemas": {
      "Status": {
        "title": "Status",
        "type": "string",
        "description": "Status",
        "enum": [
          "CREATING",
          "ACTIVE",
          "DELETING"
        ]
      },
      "IndexMappings": {
        "title": "IndexMappings",
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "oneOf": [
            {
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "text"
                  ]
                },
                "analyzers": {
                  "type": "array",
                  "description": "Analyzers.",
                  "items": {
                    "type": "string",
                    "enum": [
                      "standard",
                      "korean",
                      "japanese",
                      "english"
                    ]
                  },
                  "default": "standard"
                }
              },
              "additionalProperties": false,
              "required": [
                "type"
              ]
            },
            {
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "vector"
                  ]
                },
                "dimensions": {
                  "type": "integer",
                  "description": "Vector dimensions."
                },
                "similarity": {
                  "type": "string",
                  "description": "Vector similarity metric.",
                  "enum": [
                    "cosine",
                    "l2_norm",
                    "dot_product",
                    "max_inner_product"
                  ],
                  "default": "cosine"
                }
              },
              "additionalProperties": false,
              "required": [
                "type",
                "dimensions"
              ]
            },
            {
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "keyword",
                    "long",
                    "double",
                    "datetime",
                    "boolean"
                  ]
                }
              },
              "description": "Types that do not need additional parameters.",
              "additionalProperties": false,
              "required": [
                "type"
              ]
            }
          ]
        }
      },
      "ProjectResponse": {
        "title": "ProjectResponse",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Project ID."
          },
          "projectName": {
            "type": "string",
            "description": "Project name."
          },
          "apiKey": {
            "type": "string",
            "description": "Project API key."
          },
          "rateLimit": {
            "type": "number",
            "description": "Rate limit."
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          }
        }
      },
      "IndexResponse": {
        "title": "IndexResponse",
        "type": "object",
        "properties": {
          "projectName": {
            "type": "string",
            "description": "Project name."
          },
          "indexName": {
            "type": "string",
            "description": "Index name."
          },
          "mappings": {
            "$ref": "#/components/schemas/IndexMappings"
          },
          "numDocs": {
            "type": "integer",
            "description": "Total number of documents."
          },
          "sourceProjectName": {
            "type": "string",
            "description": "Source project name."
          },
          "sourceIndexName": {
            "type": "string",
            "description": "Source index name."
          },
          "sourceIndexVersionId": {
            "type": "string",
            "description": "Source index version."
          },
          "indexStatus": {
            "$ref": "#/components/schemas/Status"
          }
        }
      },
      "ConsistentRead": {
        "title": "ConsistentRead",
        "type": "boolean",
        "default": false,
        "description": "If your application requires a strongly consistent read, set consistentRead to true. Although a strongly consistent read might take more time than an eventually consistent read, it always returns the last updated value."
      },
      "IncludeVectors": {
        "title": "IncludeVectors",
        "type": "boolean",
        "default": false,
        "description": "If your application need to include vector values in the response, set includeVectors to true."
      },
      "BadRequest": {
        "title": "BadRequest",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "NotFound": {
        "title": "NotFound",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Unauthenticated": {
        "title": "Unauthenticated",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ResourceNotFound": {
        "title": "ResourceNotFound",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ResourceAlreadyExists": {
        "title": "ResourceAlreadyExists",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "TooManyRequests": {
        "title": "TooManyRequests",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "InternalServerError": {
        "title": "InternalServerError",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    }
  },
  "paths": {
    "/projects": {
      "get": {
        "tags": ["projects"],
        "operationId": "listProjects",
        "description": "List all projects in an account.",
        "security": [
          {
            "AdminApiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of projects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projects": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectResponse"
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "summary": "Example response for a list of projects",
                    "value": {
                      "projects": [
                        {
                          "id": "example-project-id",
                          "projectName": "example-project-name",
                          "apiKey": "<API key>",
                          "rateLimit": 10,
                          "status": "ACTIVE"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["projects"],
        "operationId": "createProject",
        "description": "Create a project.",
        "security": [
          {
            "AdminApiKey": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectName": {
                    "type": "string",
                    "description": "Displayed project name. Note that the supported maximum length is 45."
                  },
                  "rateLimit": {
                    "type": "number"
                  }
                }
              },
              "examples": {
                "example": {
                  "summary": "Example request body for project creation",
                  "value": {
                    "projectName": "example-project-name",
                    "rateLimit": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Created project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for a created project",
                    "value": {
                      "id": "example-project-id",
                      "projectName": "example-project-name",
                      "apiKey": "<API key>",
                      "rateLimit": 10,
                      "status": "CREATING"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for bad request",
                    "value": {
                      "message": "Invalid request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceAlreadyExists"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for resource already exists",
                    "value": {
                      "message": "Resource already exists"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectName}": {
      "get": {
        "tags": ["projects"],
        "operationId": "getProject",
        "description": "Get metadata of an existing project.",
        "security": [
          {
            "AdminApiKey": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectName"
          }
        ],
        "responses": {
          "200": {
            "description": "Project matched with a projectName.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for a project",
                    "value": {
                      "id": "example-project-id",
                      "projectName": "example-project-name",
                      "apiKey": "<API key>",
                      "rateLimit": 10,
                      "status": "ACTIVE"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for resource not found",
                    "value": {
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["projects"],
        "operationId": "deleteProject",
        "description": "Delete an existing project.",
        "security": [
          {
            "AdminApiKey": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectName"
          }
        ],
        "responses": {
          "202": {
            "description": "Project delete request accepted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "summary": "Example response for a deleted project",
                    "value": {
                      "message": "Project example-project-name is queued for deletion"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for resource not found",
                    "value": {
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["projects"],
        "operationId": "updateProject",
        "description": "Configure an existing project",
        "security": [
          {
            "AdminApiKey": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectName"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rateLimit": {
                    "type": "number"
                  }
                },
                "required": [
                  "rateLimit"
                ]
              },
              "examples": {
                "example": {
                  "summary": "Example request body for project update",
                  "value": {
                    "rateLimit": 20
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for an updated project",
                    "value": {
                      "id": "example-project-id",
                      "projectName": "example-project-name",
                      "apiKey": "<API key>",
                      "rateLimit": 20,
                      "status": "ACTIVE"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for bad request",
                    "value": {
                      "message": "Invalid request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for resource not found",
                    "value": {
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectName}/indexes": {
      "get": {
        "tags": ["projects.indexes"],
        "operationId": "listIndexes",
        "description": "List all indexes in an existing project.",
        "security": [
          {
            "ProjectApiKey": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectName"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of indexes matched with a projectName.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "indexes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IndexResponse"
                      }
                    }
                  }
                },
                "examples": {
                  "normalIndex": {
                    "summary": "Example response for a list of normal indexes",
                    "value": {
                      "indexes": [
                        {
                          "projectName": "example-project-name",
                          "indexName": "example-index-name",
                          "mappings": {
                            "example-field1": {
                              "type": "text",
                              "analyzers": [
                                "standard"
                              ]
                            },
                            "example-field2": {
                              "type": "vector",
                              "dimensions": 128,
                              "similarity": "cosine"
                            }
                          },
                          "numDocs": 10000,
                          "indexStatus": "ACTIVE"
                        }
                      ]
                    }
                  },
                  "clonedIndex": {
                    "summary": "Example response for a list of cloned indexes",
                    "value": {
                      "indexes": [
                        {
                          "projectName": "example-project-name",
                          "indexName": "example-index-name",
                          "mappings": {
                            "example-field1": {
                              "type": "text",
                              "analyzers": [
                                "standard"
                              ]
                            },
                            "example-field2": {
                              "type": "vector",
                              "dimensions": 128,
                              "similarity": "cosine"
                            }
                          },
                          "numDocs": 10000,
                          "cloneSourceInfo": {
                            "sourceProjectName": "example-source-project-name",
                            "sourceIndexName": "example-source-index-name",
                            "sourceIndexVersionId": "example-source-index-version-id"
                          },
                          "indexStatus": "ACTIVE"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for resource not found",
                    "value": {
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["projects.indexes"],
        "operationId": "createIndex",
        "description": "Create an index.",
        "security": [
          {
            "ProjectApiKey": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectName"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "indexName": {
                    "type": "string",
                    "description": "Index name must be unique within a project and the supported maximum length is 52."
                  },
                  "mappings": {
                    "$ref": "#/components/schemas/IndexMappings"
                  },
                  "sourceProjectName": {
                    "type": "string"
                  },
                  "sourceIndexName": {
                    "type": "string"
                  },
                  "sourceDatetime": {
                    "type": "string"
                  },
                  "sourceProjectApiKey": {
                    "type": "string"
                  }
                },
                "required": [
                  "indexName"
                ]
              },
              "examples": {
                "normalIndex": {
                  "summary": "Example request body for normal index creation",
                  "value": {
                    "indexName": "example-index-name",
                    "mappings": {
                      "example-field1": {
                        "type": "text",
                        "analyzers": [
                          "english"
                        ]
                      },
                      "example-field2": {
                        "type": "vector",
                        "dimensions": 128,
                        "similarity": "cosine"
                      }
                    }
                  }
                },
                "cloneIndex": {
                  "summary": "Example request body for index cloning",
                  "value": {
                    "indexName": "example-index-name",
                    "sourceProjectName": "example-source-project-name",
                    "sourceIndexName": "example-source-index-name",
                    "sourceProjectApiKey": "example-source-project-api-key",
                    "sourceDatetime": "2023-10-01T12:00:00Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Created index",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexResponse"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for a created index",
                    "value": {
                      "projectName": "example-project-name",
                      "indexName": "example-index-name",
                      "mappings": {
                        "example-field1": {
                          "type": "text",
                          "analyzers": [
                            "english"
                          ]
                        },
                        "example-field2": {
                          "type": "vector",
                          "dimensions": 128,
                          "similarity": "cosine"
                        }
                      },
                      "numDocs": 0,
                      "indexStatus": "CREATING"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for bad request",
                    "value": {
                      "message": "Invalid request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Resource already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceAlreadyExists"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for resource already exists",
                    "value": {
                      "message": "Resource already exists"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectName}/indexes/{indexName}": {
      "delete": {
        "tags": ["projects.indexes"],
        "operationId": "deleteIndex",
        "description": "Delete an existing index.",
        "security": [
          {
            "ProjectApiKey": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectName"
          },
          {
            "$ref": "#/components/parameters/IndexName"
          }
        ],
        "responses": {
          "202": {
            "description": "Index delete request accepted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "summary": "Example response for a deleted index",
                    "value": {
                      "message": "Index example-index-name is queued for deletion"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for resource not found",
                    "value": {
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["projects.indexes"],
        "operationId": "getIndex",
        "description": "Get metadata of an existing index.",
        "security": [
          {
            "ProjectApiKey": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectName"
          },
          {
            "$ref": "#/components/parameters/IndexName"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe index success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexResponse"
                },
                "examples": {
                  "normalIndex": {
                    "summary": "Example response for an existing index",
                    "value": {
                      "projectName": "example-project-name",
                      "indexName": "example-index-name",
                      "mappings": {
                        "example-field1": {
                          "type": "text",
                          "analyzers": [
                            "english"
                          ]
                        },
                        "example-field2": {
                          "type": "vector",
                          "dimensions": 128,
                          "similarity": "cosine"
                        }
                      },
                      "numDocs": 1000,
                      "indexStatus": "ACTIVE"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for resource not found",
                    "value": {
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["projects.indexes"],
        "operationId": "updateIndex",
        "description": "Configure an index.",
        "security": [
          {
            "ProjectApiKey": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectName"
          },
          {
            "$ref": "#/components/parameters/IndexName"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mappings": {
                    "$ref": "#/components/schemas/IndexMappings"
                  }
                },
                "required": [
                  "mappings"
                ]
              },
              "examples": {
                "example": {
                  "summary": "Example request body for index configuration",
                  "value": {
                    "mappings": {
                      "example-field1": {
                        "type": "text",
                        "analyzers": [
                          "english"
                        ]
                      },
                      "example-field2": {
                        "type": "vector",
                        "dimensions": 128,
                        "similarity": "cosine"
                      },
                      "example-field3": {
                        "type": "keyword"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated index",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexResponse"
                },
                "examples": {
                  "normalIndex": {
                    "summary": "Example response for an updated index",
                    "value": {
                      "projectName": "example-project-name",
                      "indexName": "example-index-name",
                      "mappings": {
                        "example-field1": {
                          "type": "text",
                          "analyzers": [
                            "english"
                          ]
                        },
                        "example-field2": {
                          "type": "vector",
                          "dimensions": 128,
                          "similarity": "cosine"
                        },
                        "example-field3": {
                          "type": "keyword"
                        }
                      },
                      "numDocs": 1000,
                      "indexStatus": "ACTIVE"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for bad request",
                    "value": {
                      "message": "Invalid request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for resource not found",
                    "value": {
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectName}/indexes/{indexName}/docs/upsert": {
      "post": {
        "tags": ["projects.indexes.docs"],
        "operationId": "upsertDocs",
        "description": "Upsert documents into an index. Note that the maximum supported payload size is 6MB.",
        "security": [
          {
            "ProjectApiKey": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectName"
          },
          {
            "$ref": "#/components/parameters/IndexName"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "docs": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "description": "A list of documents to upsert."
                  }
                },
                "required": [
                  "docs"
                ]
              },
              "examples": {
                "example": {
                  "summary": "Example request body for documents upsert",
                  "value": {
                    "docs": [
                      {
                        "example-doc1": {
                          "example-field1": "example-value1",
                          "example-field2": [
                            0.1,
                            0.2,
                            0.3
                          ]
                        }
                      },
                      {
                        "example-doc2": {
                          "example-field1": "example-value2",
                          "example-field2": [
                            0.4,
                            0.5,
                            0.6
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Upsert request accepted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "summary": "Example response for documents upsert`",
                    "value": {
                      "message": "Upsert request is accepted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for bad request",
                    "value": {
                      "message": "Invalid request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for resource not found",
                    "value": {
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectName}/indexes/{indexName}/docs/bulk-upsert": {
      "get": {
        "tags": ["projects.indexes.docs"],
        "operationId": "getBulkUpsertDocs",
        "description": "Request required info to upload documents.",
        "security": [
          {
            "ProjectApiKey": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectName"
          },
          {
            "$ref": "#/components/parameters/IndexName"
          }
        ],
        "responses": {
          "200": {
            "description": "Required info to upload documents.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Presigned URL."
                    },
                    "type": {
                      "type": "string",
                      "description": "Content type that must be specified when uploading documents.",
                      "default": "application/json",
                      "enum": [
                        "application/json"
                      ]
                    },
                    "httpMethod": {
                      "type": "string",
                      "description": "HTTP method that must be specified when uploading documents.",
                      "default": "PUT",
                      "enum": [
                        "PUT"
                      ]
                    },
                    "objectKey": {
                      "type": "string",
                      "description": "Object key that must be specified when uploading documents."
                    },
                    "sizeLimitBytes": {
                      "type": "integer",
                      "description": "Object size limit in bytes.",
                      "default": 209715200
                    }
                  }
                },
                "examples": {
                  "example": {
                    "summary": "Example response for bulk upsert info",
                    "value": {
                      "url": "<S3 presigned URL>",
                      "type": "application/json",
                      "httpMethod": "PUT",
                      "objectKey": "example-object-key",
                      "sizeLimitBytes": 209715200
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for resource not found",
                    "value": {
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["projects.indexes.docs"],
        "operationId": "bulkUpsertDocs",
        "description": "Bulk upsert documents into an index. Note that the maximum supported object size is 200MB.",
        "security": [
          {
            "ProjectApiKey": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectName"
          },
          {
            "$ref": "#/components/parameters/IndexName"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "objectKey": {
                    "type": "string",
                    "description": "Object key uploaded based on bulk upsert info."
                  }
                },
                "required": [
                  "objectKey"
                ]
              },
              "examples": {
                "example": {
                  "summary": "Example request body for bulk upsert",
                  "value": {
                    "objectKey": "example-object-key"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Bulk upsert request accepted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "summary": "Example response for bulk upsert`",
                    "value": {
                      "message": "Bulk upsert request is accepted"
                    }
                  }
                }
              }
            }
          },"400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for bad request",
                    "value": {
                      "message": "Invalid request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for resource not found",
                    "value": {
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectName}/indexes/{indexName}/docs/delete": {
      "post": {
        "tags": ["projects.indexes.docs"],
        "operationId": "deleteDocs",
        "description": "Delete documents by document IDs or query filter from an index.",
        "security": [
          {
            "ProjectApiKey": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectName"
          },
          {
            "$ref": "#/components/parameters/IndexName"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of document IDs."
                      }
                    },
                    "required": [
                      "ids"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "filter": {
                        "type": "object",
                        "description": "Query filter."
                      }
                    },
                    "required": [
                      "filter"
                    ]
                  }
                ]
              },
              "examples": {
                "deleteByIds": {
                  "summary": "Example request body for documents deletion by IDs",
                  "value": {
                    "ids": [
                      "example-doc-id-1",
                      "example-doc-id-2"
                    ]
                  }
                },
                "deleteByQuery": {
                  "summary": "Example request body for documents deletion by query",
                  "value": {
                    "filter": {
                      "queryString": {
                        "query": "example-field1:example-value"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Delete request accepted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "summary": "Example response for documents deletion",
                    "value": {
                      "message": "Delete request is accepted"
                    }
                  }
                }
              }
            }
          },"400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for bad request",
                    "value": {
                      "message": "Invalid request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for resource not found",
                    "value": {
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectName}/indexes/{indexName}/docs/fetch": {
      "post": {
        "tags": ["projects.indexes.docs"],
        "operationId": "fetchDocs",
        "description": "Lookup and return documents by document IDs from an index.",
        "security": [
          {
            "ProjectApiKey": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectName"
          },
          {
            "$ref": "#/components/parameters/IndexName"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of document IDs to fetch. Note that the maximum number of document IDs is 1000."
                  },
                  "consistentRead": {
                    "$ref": "#/components/schemas/ConsistentRead"
                  },
                  "includeVectors": {
                    "$ref": "#/components/schemas/IncludeVectors"
                  }
                },
                "required": [
                  "ids"
                ]
              },
              "examples": {
                "example": {
                  "summary": "Example request body for documents fetch",
                  "value": {
                    "ids": [
                      "example-doc-id-1",
                      "example-doc-id-2"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fetched documents.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Total number of documents returned."
                    },
                    "took": {
                      "type": "integer",
                      "description": "Elapsed time in milliseconds."
                    },
                    "docs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "index": {
                            "type": "string"
                          },
                          "doc": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "summary": "Example response for documents fetch",
                    "value": {
                      "total": 2,
                      "took": 10,
                      "docs": [
                        {
                          "index": "example-index-name",
                          "doc": {
                            "example-field1": "example-value1",
                            "example-field2": [0.1, 0.2, 0.3]
                          }
                        },
                        {
                          "index": "example-index-name",
                          "doc": {
                            "example-field1": "example-value2",
                            "example-field2": [0.4, 0.5, 0.6]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },"400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for bad request",
                    "value": {
                      "message": "Invalid request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for resource not found",
                    "value": {
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectName}/indexes/{indexName}/query": {
      "post": {
        "tags": ["projects.indexes"],
        "operationId": "queryIndex",
        "description": "Search an index with a query and return the most similar documents.",
        "security": [
          {
            "ProjectApiKey": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ProjectName"
          },
          {
            "$ref": "#/components/parameters/IndexName"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "size": {
                    "type": "integer",
                    "description": "Number of documents to return. Note that the maximum number of documents is 1000."
                  },
                  "query": {
                    "type": "object",
                    "description": "Query object."
                  },
                  "consistentRead": {
                    "$ref": "#/components/schemas/ConsistentRead"
                  },
                  "includeVectors": {
                    "$ref": "#/components/schemas/IncludeVectors"
                  },
                  "sort": {
                    "type": "array",
                    "description": "List of field name, sort direction pairs.",
                    "items": {
                      "type": "object"
                    }
                  },
                  "fields": {
                    "type": "array",
                    "description": "List of field name to include in results",
                    "items": {
                      "type": "string"
                    }
                  },
                  "trackScores": {
                    "type": "boolean",
                    "description": "If your application needs to track scores with sorting, set trackScores to true.",
                    "default": false
                  }
                },
                "required": [
                  "size"
                ]
              },
              "examples": {
                "example": {
                  "summary": "Example request body for query index",
                  "value": {
                    "size": 2,
                    "query": {
                      "queryString": {
                        "query": "example-field1:example-value"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Documents selected by query.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "took": {
                      "type": "integer",
                      "description": "Elapsed time in milliseconds."
                    },
                    "maxScore": {
                      "type": "number",
                      "description": "Maximum score."
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of documents returned."
                    },
                    "docs": {
                      "type": "array",
                      "description": "List of documents.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "index": {
                            "type": "string",
                            "description": "Index name."
                          },
                          "score": {
                            "type": "number",
                            "description": "Document similarity score."
                          },
                          "doc": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "summary": "Example response for documents query",
                    "value": {
                      "took": 10,
                      "maxScore": 1.0,
                      "total": 2,
                      "docs": [
                        {
                          "index": "example-index-name",
                          "score": 1.0,
                          "doc": {
                            "example-field1": "example-value1",
                            "example-field2": [0.1, 0.2, 0.3]
                          }
                        },
                        {
                          "index": "example-index-name",
                          "score": 0.9,
                          "doc": {
                            "example-field1": "example-value2",
                            "example-field2": [0.4, 0.5, 0.6]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for bad request",
                    "value": {
                      "message": "Invalid request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthenticated"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for authentication failure",
                    "value": {
                      "message": "Authentication failed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFound"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for resource not found",
                    "value": {
                      "message": "Resource not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequests"
                },
                "examples": {
                  "example": {
                    "summary": "Example response for too many requests",
                    "value": {
                      "message": "Too many requests"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError",
                },
                "examples": {
                  "example": {
                    "summary": "Example response for internal server error",
                    "value": {
                      "message": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
